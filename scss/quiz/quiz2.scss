// Advanced Quiz layout.

// Quiz background.
#page-mod-quiz-attempt section#region-main,
#page-mod-quiz-review section#region-main,
#page-question-preview,
#page-question-preview #page-content,
#page-mod-quiz-comment,
#page-mod-quiz-comment #page-content {
    background-color: $state-info-bg;
}
.que .formulation,
.path-mod-quiz .history {
    background-color: $white;
}
@media screen and (max-width: 576px) {
    #page-mod-quiz-attempt,
    #page-mod-quiz-review,
    #page-question-preview section#region-main,
    #page-mod-quiz-comment section#region-main {
        background-color: $state-info-bg;
    }
}

// Quiz color.
.que .formulation,
.path-mod-quiz .history {
    color: $gray-900;
    border: 1px solid $gray-300;
}

.que .formulation hr {
    border-top: $card-border-width solid $card-border-color;
}

.multichoice .answer .r0,
.multichoice .answer .r1,
.wordselect .qtext,
.que .formulation select,
.que .formulation input:not(.btn) {
    background-color: $gray-100;
}

.multichoice .answer .r0:hover,
.multichoice .answer .r1:hover {
    background-color: $gray-200;
}

// Short-Answer.
.que.shortanswer .answer input {
    width: 100%;
}

// Wordselect.
.wordselect .qtext {
    padding: .25rem .5rem .25rem .5rem;
}

// Wordselect selected words.
.que.wordselect .qtext .selected,
.que.wordselect .qtext .correct,
.que.wordselect .qtext .correctresponse,
.que.wordselect .qtext .incorrect {
    border: none;
    border-radius: $border-radius;
    margin: 0;
    outline: none;
}

// Wordselect highlight color.
.que.wordselect .qtext .selected,
.que.wordselect .qtext .correct {
    background-color: #ffeb3b;
}

// Ordering.
.que.ordering .sortablelist.active {
    background-color: $gray-200;
    border: none;
    border-radius: $border-radius;
}

.que.ordering .sortablelist li {
    background-color: $white;
    border-color: $gray-400;
    border-radius: 0;
    padding: .25rem .5rem .25rem .5rem;
}

// Drag and drop.
// Drag and drop onto image.
.dropbackground,
.que.ddimageortext .dropzone,
.que.ddimageortext .draghome,
.que.ddimageortext .drag,
.que.ddimageortext .dropbackground,
// Drag and drop into text.
.que.ddwtos .draghome,
.que.ddwtos .drop.active,
// Drag and drop onto image preview.
form.mform fieldset#id_previewareaheader .droppreview,
form.mform fieldset#id_previewareaheader .dropbackground,
// Drag and drop markers.
.que.ddmarker .dropbackground,
// Gapfill.
.que.gapfill span.draggable.answers,
.que.gapfill input[type="text"] {
    border: 1px solid $gray-400;
}

.que.ddimageortext .draghome,
.que.ddimageortext .drag,
form.mform fieldset#id_previewareaheader .droppreview {
    font-family: $font-family-base;
}

// Shadow.
// Drag and drop onto image elements.
.que.ddimageortext .draghomes .draghome,
// Drag and drop into text elements.
.que.ddwtos .draghome,
// Drag and drop markers elements
.que.ddmarker .draghomes .marker span.markertext,
// Gapfill elements.
.que.gapfill span.draggable.answers {
    -webkit-box-shadow: $box-shadow-sm;
    box-shadow: $box-shadow-sm;
}

// Ordering elements.
.item-moving,
// Drag and drop onto image elements.
.que.ddimageortext .drag.beingdragged,
.que.ddimageortext .draghomes .draghome.beingdragged,
.que.ddimageortext .droparea .draghome.beingdragged,
// Drag and drop into text elements.
.que.ddwtos .draghome.beingdragged,
// Drag and drop markers elements.
.que.ddmarker .marker.beingdragged span.markertext,
// Gapfill elements.
.que.gapfill span.draggable.answers:hover {
    -webkit-box-shadow: $box-shadow;
    box-shadow: $box-shadow;
}

// Multianswer Feedback.
.que.multianswer .feedbackspan {
    -webkit-box-shadow: $box-shadow-lg;
    box-shadow: $box-shadow-lg;
}

// Wordselect.
.que.wordselect .qtext .selected,
.que.wordselect .qtext .correct,
.que.wordselect .qtext .correctresponse,
.que.wordselect .qtext .incorrect,
// Drag and Drop into text element placed.
.que.ddwtos .draghome.placed {
    -webkit-box-shadow: none;
    box-shadow: none;
}

// Focus color.
// Drag and drop onto image dropzone.
.que.ddimageortext .dropzone:focus,
.que.ddimageortext .droparea .draghome:focus,
.que.ddimageortext .dropzone.valid-drag-over-drop,
.que.ddimageortext .draghome.placed.valid-drag-over-drop,
// Drag and drop into text.
.que.ddwtos .drop:focus,
.que.ddwtos .drop.valid-drag-over-drop,
.que.ddwtos .draghome.placed:focus:not(.beingdragged),
.que.ddwtos .draghome.placed.valid-drag-over-drop,
// Ordering.
.que.ordering .sortablelist li.sortableitem:focus,
// Wordselect.
.que.wordselect .qtext .keyboard_focus,
// Gapfill.
.que.gapfill input.droptarget:hover,
.que.gapfill input.droptarget:focus,
.que.gapfill input[type="text"]:focus {
    border-color: lighten($primary, 25%);
    -webkit-box-shadow: $input-btn-focus-box-shadow;
    box-shadow: $input-btn-focus-box-shadow;
    outline: 0;
}

// Gapfill.
.que.gapfill span.draggable.answers {
    background-color: $white;
    margin-right: .5rem;
    margin-bottom: .5rem;
    padding: .25rem .25rem;
}

.que.gapfill input[type="text"] {
    background-color: $gray-100;
    padding: .25rem .25rem;
}

.que.gapfill span.aftergapfeedback {
    font-style: normal;
}

// Correct or wrong answer background.
.que .answer .correct,
.que .answer .correct select,
.que select.correct,
.que.gapfill select.correct,
.que input[type="text"].correct,
.que.ordering .sortablelist li.correct {
    background-color: $state-success-bg;
}

.que .answer .incorrect,
.que .answer .incorrect select,
.que select.incorrect,
.que.gapfill select.incorrect,
.que input[type="text"].incorrect,
.que.ordering .sortablelist li.incorrect {
    background-color: $state-danger-bg;
}

.que.randomsamatch .answer .correct,
.que.randomsamatch .answer .incorrect,
.que.match .answer .correct,
.que.match .answer .incorrect {
    background-color: $white;
}

// Multiple Choice.
// Multiple Choice position of checkboxes and radio buttons.
.que.multichoice .answer div.r0 input,
.que.multichoice .answer div.r1 input {
    margin: .4rem .5rem;
}

// Multiple Choice margin.
.que .ablock {
    margin: 1em 0 1em 0;
}